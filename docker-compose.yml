version: "3.5"
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    networks:
      - qr-mono-network

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - qr-mono-network

  backend:
    container_name: backend
    env_file: .env
    restart: always
    build:
      context: ./backend
      dockerfile: "Dockerfile"
      args:
        - NODE_ENV=${STATE}
    ports:
      - ${BACKEND}:${BACKEND}
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      VIRTUAL_PORT: ${VIRTUAL_PORT}
      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      NODE_ENV: ${STATE}
    networks:
      - qr-mono-network
    volumes:
      - ./backend:/srv/app
      - ./backend:/usr/share/nginx/html:ro

  frontend:
    container_name: frontend
    restart: always
    env_file: .env
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: "Dockerfile"
      args:
        - NODE_ENV=${STATE}
    ports:
      - ${FRONTEND}:${FRONTEND}
    environment:
      VIRTUAL_HOST: qrmono.com
      VIRTUAL_PORT: '3000'
      LETSENCRYPT_HOST: qrmono.com
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      NODE_ENV: ${STATE}
    networks:
      - qr-mono-network

  mysql:
    image: mysql:8.0
    env_file:
      - ./mysql/mysql.env
    container_name: "mysql"
    restart: unless-stopped
    ports:
      - "3306:3306"
    depends_on:
      - mysql_master
    volumes:
      - ./mysql/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./mysql/data:/var/lib/mysql

networks:
  qr-mono-network:
    name: qrMonoNetwork
    driver: bridge

volumes:
  certs:
  vhostd:
  html:
